name: CI - Spring Petclinic with Ngrok

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      # 1 Checkout source code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2 Set up Java (Maven will use this)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3 Cache Maven dependencies for faster builds
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # 4 Build the project using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 5 Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6 Build Docker image
      - name: Build Docker Image
        run: |
          cp target/spring-petclinic-*.jar app.jar
          docker build -t spring-petclinic .

      # 7 Run the container
      - name: Run Spring Petclinic Container
        run: |
          docker run -d -p 8080:8080 --name petclinic spring-petclinic
          echo "Waiting for app to start..."
          sleep 20
          docker ps

      # 8 Install ngrok
      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      # 9 Start ngrok tunnel
      - name: Start ngrok tunnel
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        run: |
          ngrok config add-authtoken $NGROK_AUTHTOKEN
          nohup ngrok http 8088 > /dev/null 2>&1 &
          echo "Waiting for ngrok to start..."
          sleep 5
          echo "ngrok tunnel started at:"
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'
          echo "keeping the tunnel alive for 5 minutes..."
          sleep 300
      # 10 Show logs if needed
      - name: Show Docker Logs
        if: failure()
        run: docker logs petclinic
