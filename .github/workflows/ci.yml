name: CI - Spring Petclinic with Ngrok & Nexus

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Install ngrok
      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install -y ngrok jq

          
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Docker image
      - name: Build Docker Image
        run: |
          cp target/spring-petclinic-*.jar app.jar
          docker build -t spring-petclinic .

      # Run the container locally
      - name: Run Spring Petclinic Container
        run: |
          docker run -d -p 8080:8080 --name petclinic spring-petclinic
          echo "Waiting for app to start..."
          sleep 20
          docker ps

      # Start ngrok tunnel for Spring Petclinic (8080)
      - name: Start ngrok tunnel for App
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        run: |
          ngrok config add-authtoken $NGROK_AUTHTOKEN
          nohup ngrok http 8080 > ngrok.log 2>&1 &
          echo "Waiting for ngrok to start..."
          sleep 5
          NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "ðŸ”— App is publicly accessible at: $NGROK_URL"
          echo "APP_URL=$NGROK_URL" >> $GITHUB_ENV
      

      # Keep ngrok alive for 1 hour (3600 seconds)
      - name: Keep ngrok alive
        run: |
          echo "Keeping ngrok alive for 1 hour..."
          sleep 180


      # Show logs if needed
      - name: Show Docker Logs
        if: failure()
        run: docker logs petclinic
        
